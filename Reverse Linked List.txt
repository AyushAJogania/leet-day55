// Definition for singly-linked list.
// struct ListNode {
//     int val;
//     ListNode* next;
//     ListNode(int x) : val(x), next(nullptr) {}
// };

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = nullptr;
        ListNode* curr = head;
        
        while (curr != nullptr) {
            ListNode* nextNode = curr->next;  // Store the next node.
            curr->next = prev;  // Reverse the current node's pointer.
            prev = curr;  // Move prev and curr pointers one step forward.
            curr = nextNode;
        }
        
        return prev;  // The new head of the reversed list.
    }
};
